import pygame
import math
import random

pygame.init()

screensize = screenwidth, screenheight = 800, 600

screen = pygame.display.set_mode(screensize)

clock = pygame.time.Clock()
asteroidimages = []

for x in range(1,59):
	asteroidimages.append(pygame.image.load("images/asteroid/"+str(x).zfill(4)+".png").convert_alpha())

asteroids = []
for ast in range(1,5):
	asteroids.append({'x':float(random.randint(-100,100)), 'y':float(random.randint(-100,100)), 'dx':float(random.randint(-5,5)), 'dy':float(random.randint(-5,5)), 'frame':random.randint(0,10), 'scale':1.0, 'angle':random.randint(0,359)})

################################################################################
def myfunction():

	print "Hello from myfunction"
	print "There are "+str(len(asteroids))+" asteroids"

################################################################################

playership = {'x':float(screenwidth/2), 'y':float(screenheight/2), 'dx':0.0, 'dy':0.0, 'angle':0, 'reload':0}
playershipimage = pygame.image.load("images/playership.png").convert_alpha()

bullets = []

explosion_spritesheet = pygame.image.load("images/explosion_4x5_alpha.png").convert_alpha()
explosion_spritesheetwidth = explosion_spritesheet.get_width()
explosion_spritesheetheight = explosion_spritesheet.get_height()
explosionframes = []
explosionwidth = explosion_spritesheetwidth / 4
explosionheight = explosion_spritesheetheight / 5
for y in range(0,4):
	for x in range(0,3):
		rect = (x*explosionwidth, y*explosionheight, explosionwidth, explosionheight)
		explosionframes.append(explosion_spritesheet.subsurface(rect))
explosions=[]


while True:
	pygame.event.pump()
	keys = pygame.key.get_pressed()

	if keys[pygame.K_ESCAPE]:
		break

	if keys[pygame.K_LEFT]:
		playership['angle'] -= 5

	if keys[pygame.K_RIGHT]:
		playership['angle'] += 5

	if keys[pygame.K_UP]:
		playership['dx'] += math.sin(math.radians(playership['angle']))/2
		playership['dy'] -= math.cos(math.radians(playership['angle']))/2

	if playership['reload'] > 0:
		playership['reload'] -= 1

	if keys[pygame.K_SPACE] and playership['reload'] <= 0:
		bullets.append({'x':playership['x'] + math.sin(math.radians(playership['angle']))*38, 'y':playership['y'] - math.cos(math.radians(playership['angle']))*38, 'dx':playership['dx'] + math.sin(math.radians(playership['angle']))*15, 'dy':playership['dy'] - math.cos(math.radians(playership['angle']))*15 , 'life':25})
		playership['reload'] = 5

	playership['x'] += playership['dx']
	if playership['x'] < 0:
		playership['x'] = screenwidth
	if playership['x'] > screenwidth:
		playership['x'] = 0

	playership['y'] += playership['dy']
	if playership['y'] < 0:
		playership['y'] = screenheight
	if playership['y'] > screenheight:
		playership['y'] = 0

	playership['dx'] *= 0.985
	playership['dy'] *= 0.985

	screen.fill((0,0,0))

	for asteroid in asteroids:
		asteroidimage = pygame.transform.rotozoom(asteroidimages[asteroid['frame']], asteroid['angle'], asteroid['scale'])
		asteroidimagewidth = asteroidimage.get_width()
		asteroidimageheight = asteroidimage.get_height()

		#Draw image
		screen.blit(asteroidimage, (asteroid['x']-asteroidimagewidth/2,asteroid['y']-asteroidimageheight/2))

		#If close to the edge then also draw at opposite edge for wrap
		if asteroid['x'] < asteroidimagewidth/2:
			screen.blit(asteroidimage, (asteroid['x']-asteroidimagewidth/2+screenwidth,asteroid['y']-asteroidimageheight/2))
		if asteroid['x'] > (screenwidth-asteroidimagewidth/2):
			screen.blit(asteroidimage, (asteroid['x']-asteroidimagewidth/2-screenwidth,asteroid['y']-asteroidimageheight/2))
		if asteroid['y'] < asteroidimageheight/2:
			screen.blit(asteroidimage, (asteroid['x']-asteroidimagewidth/2,asteroid['y']-asteroidimageheight/2+screenheight))
		if asteroid['y'] > (screenheight-asteroidimageheight/2):
			screen.blit(asteroidimage, (asteroid['x']-asteroidimagewidth/2,asteroid['y']-asteroidimageheight/2-screenheight))

		asteroid['x'] += asteroid['dx']
		if asteroid['x'] < 0:
			asteroid['x'] = screenwidth
		if asteroid['x'] > screenwidth:
			asteroid['x'] = 0

		asteroid['y'] += asteroid['dy']
		if asteroid['y'] < 0:
			asteroid['y'] = screenheight
		if asteroid['y'] > screenheight:
			asteroid['y'] = 0

		asteroid['frame'] += 1
		if asteroid['frame'] >= len(asteroidimages):
			asteroid['frame'] = 0

	for bullet in bullets:
		#Draw bullet
		pygame.draw.circle(screen, (32,32,32), (int(bullet['x']-bullet['dx']*2.0),int(bullet['y']-bullet['dy']*2.0)), 1)
		pygame.draw.circle(screen, (64,64,64), (int(bullet['x']-bullet['dx']*1.5),int(bullet['y']-bullet['dy']*1.5)), 1)
		pygame.draw.circle(screen, (96,96,96), (int(bullet['x']-bullet['dx']*1.0),int(bullet['y']-bullet['dy']*1.0)), 2)
		pygame.draw.circle(screen, (128,128,128), (int(bullet['x']-bullet['dx']*0.5),int(bullet['y']-bullet['dy']*0.5)), 2)
		pygame.draw.circle(screen, (192,192,192), (int(bullet['x']),int(bullet['y'])), 3)

		bullet['x'] += bullet['dx']
		if bullet['x'] < 0:
			bullet['x'] = screenwidth
		if bullet['x'] > screenwidth:
			bullet['x'] = 0

		bullet['y'] += bullet['dy']
		if bullet['y'] < 0:
			bullet['y'] = screenheight
		if bullet['y'] > screenheight:
			bullet['y'] = 0

		# Collision
		for asteroid in asteroids:
			d2 = math.pow(bullet['x'] - asteroid['x'],2) + math.pow(bullet['y'] - asteroid['y'],2)
			if d2 < math.pow(40 * asteroid['scale'],2):
				bullet['life'] = 0
				asteroids.remove(asteroid)
				if asteroid['scale'] > 0.3:
					asteroids.append({'x':asteroid['x'], 'y':asteroid['y'], 'dx':(asteroid['dx']+bullet['dy'])/2, 'dy':(asteroid['dy']+bullet['dx'])/2, 'frame':0, 'scale':asteroid['scale']*0.65, 'angle':asteroid['angle']})
					asteroids.append({'x':asteroid['x'], 'y':asteroid['y'], 'dx':(asteroid['dx']-bullet['dy'])/2, 'dy':(asteroid['dy']-bullet['dx'])/2, 'frame':0, 'scale':asteroid['scale']*0.65, 'angle':asteroid['angle']})
				explosions.append({'x':bullet['x'], 'y':bullet['y'], 'frame': 0.0, 'scale': asteroid['scale']/2})


		bullet['life'] -= 1
		if bullet['life'] <= 0:
			bullets.remove(bullet)

	playershiprotatedimage = pygame.transform.rotozoom(playershipimage, -playership['angle'],1)
	screen.blit(playershiprotatedimage, (playership['x']-playershiprotatedimage.get_width()/2, playership['y']-playershiprotatedimage.get_height()/2))

	# Player collision
	for asteroid in asteroids:
		d2 = math.pow(playership['x'] - asteroid['x'],2) + math.pow(playership['y'] - asteroid['y'],2)
		if d2 < math.pow(30 + 40 * asteroid['scale'],2):
			asteroids.remove(asteroid)
			explosions.append({'x':asteroid['x'], 'y':asteroid['y'], 'frame': 0.0, 'scale': asteroid['scale']/2})
			playership['dx'] += asteroid['dx'] * asteroid['scale']
			playership['dy'] += asteroid['dy'] * asteroid['scale']

	for explosion in explosions:
		explosionimage = pygame.transform.rotozoom(explosionframes[int(explosion['frame'])], 0, explosion['scale'])

		screen.blit(explosionimage, (explosion['x']-explosionimage.get_width()/2,explosion['y']-explosionimage.get_height()/2))
		explosion['frame'] += 1.1-explosion['scale']
		if explosion['frame'] >= len(explosionframes):
			explosions.remove(explosion)

	myfunction()
	pygame.display.flip()
	clock.tick(30)


